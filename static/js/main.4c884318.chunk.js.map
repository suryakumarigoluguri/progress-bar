{"version":3,"sources":["components/userdetails.jsx","components/personaldetails.jsx","components/confirmation.jsx","components/success.jsx","components/progressbar.js","components/mainform.jsx","App.js","serviceWorker.js","index.js"],"names":["UserDetails","saveAndContinue","e","preventDefault","_this","props","nextStep","values","this","react_default","a","createElement","Form","className","Field","placeholder","onChange","handleChange","defaultValue","firstName","lastName","type","email","Button","onClick","Component","PersonalDetails","back","prevStep","color","age","city","country","Confirmation","_this$props$values","List","Item","Icon","name","Content","href","Success","StepProgressBar","react_step_progress_bar","percent","step","_ref","accomplished","index","concat","id","_ref2","_ref3","React","MainForm","state","setState","input","event","Object","defineProperty","target","value","_this$state","components_progressbar","userdetails","personaldetails","confirmation","success","App","Container","textAlign","mainform","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c884318.chunk.js","sourcesContent":["// UserDetails.jsx\nimport React, { Component } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\n\nclass UserDetails extends Component{\n\n    saveAndContinue = (e) => {\n        e.preventDefault()\n        this.props.nextStep()\n    }\n\n    render(){\n        const { values } = this.props;\n        return(\n            <Form >\n                <h1 className=\"ui centered\">Enter User Details</h1>\n                <Form.Field>\n                    <label>First Name</label>\n                    <input\n                    placeholder='First Name'\n                    onChange={this.props.handleChange('firstName')}\n                    defaultValue={values.firstName}\n                    />\n                </Form.Field>\n                <Form.Field>\n                    <label>Last Name</label>\n                    <input\n                    placeholder='Last Name'\n                    onChange={this.props.handleChange('lastName')}\n                    defaultValue={values.lastName}\n                    />\n                </Form.Field>\n                <Form.Field>\n                    <label>Email Address</label>\n                    <input\n                    type='email'\n                    placeholder='Email Address'\n                    onChange={this.props.handleChange('email')}\n                    defaultValue={values.email}\n                    />\n                </Form.Field>\n                <Button onClick={this.saveAndContinue}>Save And Continue </Button>\n            </Form>\n        )\n    }\n}\n\nexport default UserDetails;","// PersonalDetails.jsx\nimport React, { Component } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { throws } from 'assert';\n\nclass PersonalDetails extends Component{\n    saveAndContinue = (e) => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = (e) => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render(){\n        const { values } = this.props\n        return(\n        <Form color='blue' >\n            <h1 className=\"ui centered\">Enter Personal Details</h1>\n            <Form.Field>\n                <label>Age</label>\n                <input placeholder='Age'\n                onChange={this.props.handleChange('age')}\n                defaultValue={values.age}\n                />\n            </Form.Field>\n            <Form.Field>\n                <label>City</label>\n                <input placeholder='City'\n                onChange={this.props.handleChange('city')}\n                defaultValue={values.city}\n                />\n            </Form.Field>\n            <Form.Field>\n                <label>Country</label>\n                <input placeholder='Country'\n                onChange={this.props.handleChange('country')}\n                defaultValue={values.country}\n                />\n            </Form.Field>\n            <Button onClick={this.back}>Back</Button>\n            <Button onClick={this.saveAndContinue}>Save And Continue </Button>\n        </Form>\n        )\n    }\n}\n\nexport default PersonalDetails;","// Confirmation.jsx\nimport React, { Component } from 'react';\nimport { Button, List } from 'semantic-ui-react';\n\nclass Confirmation extends Component{\n    saveAndContinue = (e) => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = (e) => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render(){\n        const {values: { firstName, lastName, email, age, city, country }} = this.props;\n\n        return(\n            <div>\n                <h1 className=\"ui centered\">Confirm your Details</h1>\n                <p>Click Confirm if the following details have been correctly entered</p>\n                <List>\n                    <List.Item>\n                        <List.Icon name='users' />\n                        <List.Content>First Name: {firstName}</List.Content>\n                    </List.Item>\n                    <List.Item>\n                        <List.Icon name='users' />\n                        <List.Content>Last Name: {lastName}</List.Content>\n                    </List.Item>\n                    <List.Item>\n                        <List.Icon name='mail' />\n                        <List.Content>\n                            <a href='mailto:jack@semantic-ui.com'>{email}</a>\n                        </List.Content>\n                    </List.Item>\n                    <List.Item>\n                        <List.Icon name='calendar' />\n                        <List.Content>{age} Years</List.Content>\n                    </List.Item>\n                    <List.Item>\n                        <List.Icon name='marker' />\n                        <List.Content>{city}, {country}</List.Content>\n                    </List.Item>\n                </List>\n\n                <Button onClick={this.back}>Back</Button>\n                <Button onClick={this.saveAndContinue}>Confirm</Button>\n            </div>\n        )\n    }\n}\n\nexport default Confirmation;","// Success.jsx\nimport React, { Component } from 'react';\n\nclass Success extends Component{\n    render(){\n        return(\n            <div>\n                <h1 className=\"ui centered\">Details Successfully Saved</h1>\n            </div>\n        )\n    }\n}\n\nexport default Success;","\n//Reference link https://www.npmjs.com/package/react-step-progress-bar\n\nimport React from \"react\";\nimport \"react-step-progress-bar/styles.css\";\nimport './progressbar.css'\nimport { ProgressBar, Step } from \"react-step-progress-bar\";\n\n\nclass StepProgressBar extends React.Component {\n  render() {\n    return (\n      <ProgressBar percent={this.props.step * 50}>\n        <Step>\n          {({ accomplished, index }) => (\n            <div\n              className={`indexedStep ${accomplished ? \"accomplished\" : \"\"}`}\n              id={(this.props.step>=0?\"active\":\"inactive\")}\n            >\n              {index + 1}\n            </div>\n          )}\n        </Step>\n        <Step>\n          {({ accomplished, index }) => (\n            <div\n              className={`indexedStep ${accomplished ? \"accomplished\" : \"\"}`}\n              id={(this.props.step>=1?\"active\":\"inactive\")}\n            >\n              {index + 1}\n            </div>\n          )}\n        </Step>\n        <Step>\n          {({ accomplished, index }) => (\n            <div\n              className={`indexedStep ${accomplished ? \"accomplished\" : \"\"}`}\n              id={(this.props.step>=2?\"active\":\"inactive\")}             \n            >\n              {index + 1}\n            </div>\n          )}\n        </Step>\n      </ProgressBar>\n    );\n  }\n}\n\nexport default StepProgressBar;","import React, { Component } from 'react';\nimport UserDetails from './userdetails';\nimport PersonalDetails from './personaldetails';\nimport Confirmation from './confirmation';\nimport Success from './success';\nimport StepProgressBar from \"./progressbar\";\n\nclass MainForm extends Component {\n    state = {\n        step: 1,\n        firstName: '',\n        lastName: '',\n        email: '',\n        age: '',\n        city: '',\n        country: ''\n    }\n\n    nextStep = () => {\n        const { step } = this.state\n        this.setState({\n            step : step + 1\n        })\n    }\n\n    prevStep = () => {\n        const { step } = this.state\n        this.setState({\n            step : step - 1\n        })\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input] : event.target.value })\n    }\n\n    render(){\n        const {step} = this.state;\n        const { firstName, lastName, email, age, city, country } = this.state;\n        const values = { firstName, lastName, email, age, city, country };\n        switch (step) {\n            case 1:\n              return (\n                <div>\n                  <StepProgressBar step={this.state.step-1} />\n                  <br /><br />\n                  <UserDetails\n                    nextStep={this.nextStep}\n                    handleChange={this.handleChange}\n                    values={values}\n                  />\n                </div>\n              );\n            case 2:\n              return (\n                <div>\n                  <StepProgressBar step={this.state.step-1} />\n                  <br /><br />\n                  <PersonalDetails\n                    nextStep={this.nextStep}\n                    prevStep={this.prevStep}\n                    handleChange={this.handleChange}\n                    values={values}\n                  />\n                </div>\n              );\n            case 3:\n              return (\n                <div>\n                  <StepProgressBar step={this.state.step-1} />\n                  <br /><br />\n                  <Confirmation\n                    nextStep={this.nextStep}\n                    prevStep={this.prevStep}\n                    values={values}\n                  />\n                </div>\n              );\n            case 4:\n                return <Success/>\n      \n        }\n    }\n}\n\nexport default MainForm;","\n//Reference link https://scotch.io/tutorials/creating-multistep-forms-with-react-and-semantic-ui\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport MainForm from './components/mainform';\nimport { Container } from 'semantic-ui-react';\n\n\nclass App extends Component {\n\n  render() {\n    return(\n      <Container textAlign='center'>\n        <MainForm />\n      </Container>     )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}